name: UsingMsbuild

on: push

jobs:
  UsingMsbuild:
    name: UsingMsbuildjob
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
    
      - name: Set up msbuild
        uses: microsoft/setup-msbuild@v1.1
  
      - name: Build app for release
        run: msbuild HiPIMS-OCL.vcxproj -t:rebuild -verbosity:n -property:Configuration=Release -restore

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: hipArtifact
          path: "bin/win32/release/hipims.exe"
  ReleaseArtifact:
    name: Release Project
    runs-on: windows-latest
    needs: UsingMsbuild
    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: hipArtifact
    - name: Test Artifact Download
      run: ls -R
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./hipims.exe
          asset_name: hipims-v${{github.run_number}}.exe
          asset_content_type: application/exe
    