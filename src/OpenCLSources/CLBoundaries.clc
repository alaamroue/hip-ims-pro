/*
 * ------------------------------------------
 *
 *  HIGH-PERFORMANCE INTEGRATED MODELLING SYSTEM (HiPIMS)
 *  Luke S. Smith and Qiuhua Liang
 *  luke@smith.ac
 *
 *  School of Civil Engineering & Geosciences
 *  Newcastle University
 * 
 * ------------------------------------------
 *  This code is licensed under GPLv3. See LICENCE
 *  for more information.
 * ------------------------------------------
 *  BOUNDARY CONDITIONS
 * ------------------------------------------
 *  Management functions for a domain
 *  boundaries.
 * ------------------------------------------
 *
 */

__kernel void bdy_Promaides (
	__global		cl_double2 const * restrict	pBoundaryArray,
	__global		cl_double *					pTime,
	__global		cl_double *				pCellState,
	__global		cl_double *					pCellBed
	)
{
	// Which global series are we processing, and which cell
	// Global ID is X, Y cell, then Z for the series
	__private cl_long		lIdxX = get_global_id(0);
	__private cl_long		lIdxY = get_global_id(1);
	__private cl_ulong		ulIdx;

	// Don't bother if we've gone beyond the domain bounds
	if (lIdxX > DOMAIN_COLS - 1 ||
		lIdxY > DOMAIN_ROWS - 1 ||
		lIdxX < 0 ||
		lIdxY < 0 )
		return;

	ulIdx = getCellID(lIdxX, lIdxY);

	__private cl_double					dRate			= pBoundaryArray[ulIdx].x;
	__private cl_double					dLclTimestep	= *pTime;
	__private cl_double					pCellData		= pCellState[ulIdx];
	__private cl_double					dCellBedElev	= pCellBed[ulIdx];

	// Hydrological processes have their own timesteps
	if (dLclTimestep <= 0.0)
		return;

	// This would already be represented in the series
	if (pCellData == -9999.0){
		if(dRate!=0){
			printf("not represented");
		}
		return;
	}

	//Todo: Alaa this goes under the bed elevation. Add a max function
	// Apply the value...
	pCellData = max(dCellBedElev, pCellData + dRate * dLclTimestep);

	if (ulIdx==207729){
	//printf("dCellBedElev %f pCellData %f dRate %f dLclTimestep %f \n", dCellBedElev, pCellData, dRate, dLclTimestep);
	}
	// Return to global memory
	pCellState[ulIdx] = pCellData;
}
