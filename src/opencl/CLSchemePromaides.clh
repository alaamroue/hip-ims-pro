/*
 * ------------------------------------------
 *
 *  HIGH-PERFORMANCE INTEGRATED MODELLING SYSTEM (HiPIMS)
 *  Luke S. Smith and Qiuhua Liang
 *  luke@smith.ac
 *
 *  School of Civil Engineering & Geosciences
 *  Newcastle University
 * 
 * ------------------------------------------
 *  This code is licensed under GPLv3. See LICENCE
 *  for more information.
 * ------------------------------------------
 *  Header file
 *  INERTIAL SCHEME
 * ------------------------------------------
 *  Implementation of the simplified inertial
 *  scheme
 * ------------------------------------------
 *
 */

//#define TIMESTEP_SIMPLIFIED		1			// Calculated based on sqrt(gh) instead of u + sqrt(gh)
#define TIMESTEP_PROMAIDES 1

// Structure definitions
typedef struct sFaceStructure {
	cl_double4	pN;
	cl_double4	pE;
	cl_double4	pS;
	cl_double4	pW;
} sFaceStructure;

// Structure definitions
typedef struct sUsePolini {
	bool	usePoliniN;
	bool	usePoliniE;
	bool	usePoliniS;
	bool	usePoliniW;
} sUsePolini;

#ifdef USE_FUNCTION_STUBS

// Function definitions
__kernel  REQD_WG_SIZE_FULL_TS
void pro_cacheDisabled ( 
	__constant	cl_double *,
	__global	cl_double const * restrict,
	__global	cl_double4 *,
	__global	cl_double4 *,
	__global    cl_double const * restrict,
	__global	sUsePolini const * restrict,
	__global	cl_double  const * restrict,
	__global	cl_double  const * restrict,
	__global	cl_double  const * restrict,
	__global	cl_double  const * restrict
);

cl_double2 manning_Solver(
	cl_double Timestep,
	cl_double manning,
	cl_double manning_Neig,
	cl_double opt_s_Cell,
	cl_double opt_s_Neig,
	cl_double opt_z_Cell,
	cl_double opt_z_Neig,
	cl_double DeltaXY,
	bool debug
	);

cl_double2 poleni_Solver(
	cl_double Timestep,
	cl_double manning,
	cl_double manning_Neig,
	cl_double opt_s_Cell,
	cl_double opt_s_Neig,
	cl_double opt_z_Cell,
	cl_double opt_z_Neig,
	cl_double opt_zxymax,
	cl_double opt_cxy,
	cl_double DeltaXY,
	bool debug
	);

#endif